# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Reporter_Tracebility_03.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QMainWindow, QWidget ,QSplitter, QLabel, QFileDialog
from khayyam import  jalali_datetime , jalali_date

from datetime import *
import yaml, mysql, pyodbc

##connect to database Sepidar
class MssqlConnection(object):
    try:

        server = '192.168.4.2\SEPIDAR'
        database = 'Sepidar04'
        username = 'bpms'
        password = 'aezakmiHESOYAM!@#321'
        cnxn_2 = pyodbc.connect(
            'DRIVER={ODBC Driver 17 for SQL Server};SERVER=' + server + ';DATABASE=' + database + ';UID=' + username + ';PWD=' + password)
        cursor = cnxn_2.cursor()

        # server = '192.168.1.24\CYBERGATESHAHO'
        # database = 'Sepidar04'
        # username = 'sa'
        # password = 'P@ssw0rdshaho123'
        # cnxn_2 = pyodbc.connect(
        #     'DRIVER={ODBC Driver 17 for SQL Server};SERVER=' + server + ';DATABASE=' + database + ';UID=' + username + ';PWD=' + password)
        # cursor = cnxn_2.cursor()
    # # password = 'P@ssw0rdshaho1234'  bpms user

    except:
        print("شوت  ")


##connect to database Tracebility
class Bpms_Database():
    try:

        with open("config.yaml", "r") as yamlfile:
            data_r = yaml.load(yamlfile, Loader=yaml.FullLoader)

        DB_save = mysql.connector.connect(
            host=data_r[0]['DATA_Setting']['HOST_SERVER'],
            user=data_r[0]['DATA_Setting']['USER_SERVER'],
            password=data_r[0]['DATA_Setting']['PASSWORD_SERVER'],
            database=data_r[0]['DATA_Setting']['DATABASE_SERVER'],

        )
    except:
        import sys

        ...

        # msg = QMessageBox()
        # msg.setIcon(QMessageBox.Critical)
        # msg.setText("ارتباط با دیتابیس  برقرار نشد  ")
        # msg.setWindowTitle("No Conecction")
        # msg.exec_()

    #
    #
    #
    #
    #
    # try:
    #     DB_save = mysql.connector.connect(
    #         host="192.168.1.91",
    #         user="BPMS",
    #         password="P@ssw0rd",
    #         database="photon"
    #     )
    #
    #
    # except:
    #     print("ارتباط با دیتابیس ردیابی  برقرار نشد")
    #     # msg = QMessageBox()
    #     # msg.setIcon(QMessageBox.Critical)
    #     # # msg.setStyle('fusion')
    #     # msg.setText("ارتباط با دیتابیس ردیابی  برقرار نشد")
    #     #
    #     # msg.setWindowTitle("No Conecction")
    #     # msg.exec_()


class Ui_Tracebility(object):
    def setupUi(self, Tracebility):
        Tracebility.setObjectName("Tracebility")
        Tracebility.resize(988, 754)
        self.centralwidget = QtWidgets.QWidget(Tracebility)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setObjectName("comboBox_2")
        self.horizontalLayout.addWidget(self.comboBox_2)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout.addWidget(self.label_6)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.horizontalLayout.addWidget(self.lineEdit_7)
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout.addWidget(self.label_7)
        self.lineEdit_8 = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.lineEdit_8.setFont(font)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.horizontalLayout.addWidget(self.lineEdit_8)
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout.addWidget(self.label_8)
        self.gridLayout_2.addLayout(self.horizontalLayout, 2, 0, 1, 1)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.tableWidget.setFont(font)
        self.tableWidget.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        self.gridLayout_2.addWidget(self.tableWidget, 3, 0, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetNoConstraint)
        self.gridLayout.setObjectName("gridLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.gridLayout.addWidget(self.lineEdit, 0, 13, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 0, 5, 1, 1)
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setObjectName("comboBox")
        self.gridLayout.addWidget(self.comboBox, 0, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 0, 8, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 0, 3, 1, 1)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.gridLayout.addWidget(self.lineEdit_4, 0, 4, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setText("")
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout.addWidget(self.lineEdit_2, 0, 10, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 0, 11, 1, 1)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.gridLayout.addWidget(self.lineEdit_5, 0, 2, 1, 1)
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 14, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout.addWidget(self.lineEdit_3, 0, 7, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("B Nazanin")
        font.setPointSize(12)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.gridLayout.addWidget(self.label_9, 0, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        Tracebility.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Tracebility)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 988, 21))
        self.menubar.setObjectName("menubar")
        self.menusave_to_excel = QtWidgets.QMenu(self.menubar)
        self.menusave_to_excel.setObjectName("menusave_to_excel")
        Tracebility.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Tracebility)
        self.statusbar.setObjectName("statusbar")
        Tracebility.setStatusBar(self.statusbar)
        self.actionSave_To_Excel = QtWidgets.QAction(Tracebility)
        self.actionSave_To_Excel.setObjectName("actionSave_To_Excel")
        self.menusave_to_excel.addAction(self.actionSave_To_Excel)
        self.menubar.addAction(self.menusave_to_excel.menuAction())

        self.retranslateUi(Tracebility)
        QtCore.QMetaObject.connectSlotsByName(Tracebility)
        # Functions
        self.lineEdit_2.textChanged.connect(self.Get_Order_Code)
        self.comboBox.activated.connect(self.curen_fisc)

        ###
        ###Table Widh
        self.tableWidget.setColumnWidth(6, 300)


    def Feed_FiscalYear(self):
        try:
            with MssqlConnection.cnxn_2 as connection:
                cursor = connection.cursor()
                cursor.execute(f" select FiscalYearId, Title from FMK.FiscalYear ")
                self.FiscalYear = cursor.fetchall()

                # self.comboBox.
                # print(self.FiscalYear[0][1])
                # self.comboBox.addItems([f"{self.FiscalYear[0][1]}", f"{self.FiscalYear[1][1]}", f"{self.FiscalYear[2][1]}",f"{self.FiscalYear[3][1]}",
                #                        f"{self.FiscalYear[4][1]}", f"{self.FiscalYear[5][1]}", f"{self.FiscalYear[6][1]}"])
                for indx in range(len(self.FiscalYear)):
                    valu = self.FiscalYear[indx][1]
                    _ID = self.FiscalYear[indx][0]
                    self.comboBox.addItem(valu, userData=_ID)
                self.comboBox.setCurrentText(valu)
        except:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            # msg.setStyle('fusion')
            msg.setText("سال مالی بارگزاری نشد ")

            msg.setWindowTitle("No Conecction")
            msg.exec_()

        ################################################################################################

        ###  Get from user Order code  to start functions for read data order on Database


    def Get_Order_Code(self):
        try:

            if len(self.lineEdit_2.text()):
                with MssqlConnection.cnxn_2 as connection:
                    cursor = connection.cursor()

                    ##################################################################################################
                    ##### send query code of  productorder  to databese for given code of  ProducrFormula and
                    ##### FiscalYear and after thats state most be get refrence cods to next stat
                    cursor.execute(
                        f"select  ProductFormulaRef, ProductRef, Quantity,State ,FiscalYearRef from  WKO.ProductOrder"
                        f" where number={str(self.lineEdit_2.text())} and FiscalYearRef={self.comboBox.currentData()};")
                    mydata = cursor.fetchall()
                    ProductFormulaRef = mydata[0][0]
                    ProductRef = mydata[0][1]
                    self.Quantity = mydata[0][2]
                    self.Quantity = float(self.Quantity)
                    self.Quantity = int(self.Quantity)
                    self.Quantity = str(self.Quantity)

                    State = mydata[0][3]
                    FiscalYearRefmy = mydata[0][4]

                ####################################################################################################################
                cursor.execute(
                    f"select  Code, Title, ItemRef, ItemUnitRef, Quantity, IsActive from  WKO.ProductFormula "
                    f" where ProductFormulaID={str(ProductFormulaRef)};")
                ProductFormulaRef_DETAIL = cursor.fetchall()
                ProductFormulaRef_Code = ProductFormulaRef_DETAIL[0][0]
                ProductFormulaRef_Title = ProductFormulaRef_DETAIL[0][1]

                ProductFormulaRef_ItemRef = ProductFormulaRef_DETAIL[0][2]
                ProductFormulaRef_ItemUnitRef = ProductFormulaRef_DETAIL[0][3]
                ProductFormulaRef_Quantity = ProductFormulaRef_DETAIL[0][4]
                ProductFormulaRef_IsActive = ProductFormulaRef_DETAIL[0][5]

                #### get  title   fiscalyear from combobox  current data
                ############################################################################################################

                cursor.execute(
                    f"select   Title  from  FMK.FiscalYear  where FiscalYearID={str(self.comboBox.currentData())};")
                FiscalYearRef_Title = cursor.fetchall()
                # print("FiscalYearRef_Title", FiscalYearRef_Title)
                ## read  data from  inv item    code product  discription product
                #########################################################################################################
                cursor.execute(f"select Code  , Title   from  INV.Item "
                               f" where ItemID={str(ProductFormulaRef_ItemRef)};")
                ProductFormulaRef_ItemRef_detail = cursor.fetchall()
                ProductFormulaRef_ItemRef_Code = ProductFormulaRef_ItemRef_detail[0][0]
                ProductFormulaRef_ItemRef_Title = ProductFormulaRef_ItemRef_detail[0][1]

                ##########################set value on lineedite  for show order code detail
                self.lineEdit.setText(ProductFormulaRef_ItemRef_Code)
                # self.lineEdit_7.setText(str(self.Quantity))
                self.lineEdit_8.setText(ProductFormulaRef_ItemRef_Title)
                self.lineEdit_7.setText(str(ProductFormulaRef_Title))
                ##########  if len order code lawerthan of 1  clear  all lineEdit
            else:
                if len(self.lineEdit_2.text()) < 1:
                    ...

                    self.lineEdit_7.clear()
                    self.lineEdit.clear()
                    self.lineEdit_8.clear()
        except:

            msg = QtWidgets.QMessageBox()
            # msg.setIcon(QMessageBox.Critical)
            msg.setText("کد سفارش پیدا نشد")
            msg.setWindowTitle("خطا")
            msg.exec_()


            self.lineEdit_7.clear()
            self.lineEdit.clear()
            self.lineEdit_8.clear()

        ##########################################################################################################

        # cursor.execute(f"select   Code , Title, Itemref , Quantity  from  WKO.ProductFormula "
        #                f" where ProductFormulaID={str(Product_Order_ProductFormulaRef)};")
        # Data_ProductFormulaRef_from_product_Order = cursor.fetchall()
        # print(Data_ProductFormulaRef_from_product_Order)
        #
        #
        #
        # cursor.execute(f"select   Code , Title, Itemref , ItemRef, ItemUnitRef , BaseProductFormula ,Quantity   from  WKO.ProductFormula"
        #                f" where ProductFormulaID={str(Formul_BOM_Item_ProductFormulaRef)};")
        # Data_ProductFormulaRef_from_formul_BOM = cursor.fetchall()
        # print(Data_ProductFormulaRef_from_formul_BOM)

        ### reaad Code source store

    def Set_Time_combobox(self):
        from datetime import datetime, timedelta
        from dateutil.relativedelta import relativedelta

        TabelName = 'Save_Tracebility_'

        for i in range(12):
            TabelTime = f"{TabelName}{jalali_datetime.JalaliDatetime.now().year}-{i+1}"
            print(TabelTime)



        # def get_forward_month_list():
            # now = datetime.now()
        #
        #     now = f"{jalali_datetime.JalaliDatetime.now().year}-{jalali_datetime.JalaliDatetime.now().month}"
        #     # return [(now + relativedelta(months=i)).strftime('%b') for i in range(12)]
        # print(get_forward_month_list())





        # for indx in range(len()):
        #     valu = self.FiscalYear[indx][1]
        #     _ID = self.FiscalYear[indx][0]
        #     self.comboBox.addItem(valu, userData=_ID)
        # self.comboBox.setCurrentText(valu)
        # jalali_datetime.JalaliDatetime.

    def curen_fisc(self):
        self.lineEdit.clear()
        self.lineEdit_2.clear()
        self.lineEdit_4.clear()
        self.lineEdit_5.clear()
        self.lineEdit_7.clear()
        self.lineEdit_8.clear()







    def retranslateUi(self, Tracebility):
        _translate = QtCore.QCoreApplication.translate
        Tracebility.setWindowTitle(_translate("Tracebility", "MainWindow"))
        self.label_6.setText(_translate("Tracebility", "تاریخ"))
        self.label_7.setText(_translate("Tracebility", "شرح فورمول ساخت"))
        self.label_8.setText(_translate("Tracebility", "شرح محصول "))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Tracebility", "کد محصول "))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Tracebility", "کد سفارش"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Tracebility", "کد پرسنلی اپراتور"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Tracebility", "کد  OPC"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Tracebility", "شماره ایستگاه"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Tracebility", "کد ردیابی "))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("Tracebility", "تاریخ "))
        self.label_4.setText(_translate("Tracebility", "شماره ایستگاه"))
        self.label_3.setText(_translate("Tracebility", "کد پرسنل"))
        self.label_5.setText(_translate("Tracebility", "کد ردیابی"))
        self.label_2.setText(_translate("Tracebility", "کد سفارش"))
        self.label.setText(_translate("Tracebility", "کد محصول "))
        self.label_9.setText(_translate("Tracebility", "سال مالی "))
        self.menusave_to_excel.setTitle(_translate("Tracebility", "File"))
        self.actionSave_To_Excel.setText(_translate("Tracebility", "Save_To_Excel"))
        self.Feed_FiscalYear()
        self.Set_Time_combobox()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Tracebility = QtWidgets.QMainWindow()
    ui = Ui_Tracebility()
    ui.setupUi(Tracebility)
    Tracebility.show()
    sys.exit(app.exec_())
